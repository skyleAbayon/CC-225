CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(100),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE Members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE BorrowedBooks (
    borrow_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

INSERT INTO Authors (name, birth_year) VALUES
('Author One', 1975),
('Author Two', 1980),
('Author Three', 1990),
('Author Four', 1985),
('Author Five', 1970);

INSERT INTO Books (title, author_id, published_year, genre) VALUES
('Book One', 1, 2010, 'Fiction'),
('Book Two', 2, 1999, 'Non-Fiction'),
('Book Three', 3, 2021, 'Science'),
('Book Four', 4, 2015, 'History'),
('Book Five', 5, 2005, 'Fantasy');

INSERT INTO Members (name, email, join_date) VALUES
('Member One', 'member1@example.com', '2023-01-10'),
('Member Two', 'member2@example.com', '2022-06-15'),
('Member Three', 'member3@example.com', '2021-09-20');

INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES
(1, 1, '2024-01-01', '2024-01-10'),
(2, 2, '2024-02-01', NULL),
(3, 3, '2024-02-10', '2024-02-20'),
(4, 1, '2024-03-01', NULL),
(5, 2, '2024-03-05', '2024-03-15');

SELECT * FROM Books WHERE published_year > 2000;

SELECT DISTINCT Members.* FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

SELECT Books.title, Authors.name 
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title FROM BorrowedBooks
JOIN Books ON BorrowedBooks.book_id = Books.book_id
WHERE return_date IS NULL;

SELECT Authors.name, COUNT(Books.book_id) AS book_count 
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
