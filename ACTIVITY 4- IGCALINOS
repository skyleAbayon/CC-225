-- Create Tables
CREATE TABLE Authors (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Books (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(255),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE Members (
    member_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE BorrowedBooks (
    borrow_id INT PRIMARY KEY AUTO_INCREMENT,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

-- 1. Insert 5 Authors, 6 Books (including one after 2000), 3 Members
INSERT INTO Authors (name, birth_year) VALUES 
('J.K. Rowling', 1965),
('George Orwell', 1903),
('Jane Austen', 1775),
('Mark Twain', 1835),
('Ernest Hemingway', 1899);

-- Insert new books, including one published after 2000
INSERT INTO Books (title, author_id, published_year, genre) VALUES 
('Harry Potter and the Philosopher\'s Stone', 1, 1997, 'Fantasy'),
('Animal Farm', 2, 1945, 'Dystopian'),
('Sense and Sensibility', 3, 1811, 'Romance'),
('The Adventures of Tom Sawyer', 4, 1876, 'Adventure'),
('For Whom the Bell Tolls', 5, 1940, 'Fiction'),
('The Casual Vacancy', 1, 2012, 'Fiction');  -- This book is published after 2000

-- Insert new members
INSERT INTO Members (name, email, join_date) VALUES 
('Alice Johnson', 'alice@example.com', '2023-01-15'),
('Bob Smith', 'bob@example.com', '2023-02-10'),
('Charlie Brown', 'charlie@example.com', '2023-03-05');

-- Insert borrowed books (some returned, some not)
INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES 
(1, 1, '2024-02-01', NULL),  -- Alice borrowed Harry Potter, not returned yet
(2, 2, '2024-01-15', '2024-02-10'),  -- Bob borrowed Animal Farm and returned it
(3, 3, '2024-01-25', NULL);  -- Charlie borrowed Sense and Sensibility, not returned yet

-- 2. Find all books published after the year 2000
SELECT * FROM Books WHERE published_year > 2000;

-- 3. Get a list of members who have borrowed at least one book
SELECT DISTINCT Members.member_id, Members.name, Members.email
FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

-- 4. Retrieve all books along with their author's name
SELECT Books.title, Authors.name AS author_name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

-- 5. Find all books that have been borrowed but not yet returned
SELECT Books.title, Members.name AS borrowed_by, BorrowedBooks.borrow_date
FROM BorrowedBooks
JOIN Books ON BorrowedBooks.book_id = Books.book_id
JOIN Members ON BorrowedBooks.member_id = Members.member_id
WHERE BorrowedBooks.return_date IS NULL;

-- 6. Count how many books each author has written
SELECT Authors.name, COUNT(Books.book_id) AS book_count
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
