CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(255),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE BorrowedBooks (
    borrow_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)

);
CREATE TABLE Members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

INSERT INTO Authors (name, birth_year) VALUES
('Argentina ', 1948),
('Sophia ', 1954),
('Geovanz ', 1937),
('Luna', 1850),
('Leo', 1862);


INSERT INTO Books (title, author_id, published_year, genre) VALUES
('Jurassic Park', 1, 1993, 'Science Fiction'),
('The Perks of Being a Wallflower', 2, 1990, 'Fantasy'),
('The Outlander', 3, 1977, 'Horror'),
('Murder on the Orient Express', 4, 1934, 'Mystery'),
('The Hobbit', 5, 1937, 'Fantasy');


INSERT INTO Members (name, email, join_date) VALUES
('Kyi', 'kyi.@example.com', '2020-07-15'),
('Van', 'van.sydney@example.com', '2018-09-22'),
('Rry', 'rry.yoo@example.com', '2020-09-10');

INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES
(1, 1, '2023-01-01', NULL),
(2, 2, '2023-02-15', '2023-03-01'),
(3, 3, '2023-03-10', NULL);

SELECT * FROM Books WHERE published_year > 2000;

SELECT DISTINCT Members.name
FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

SELECT Books.title, Authors.name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title
FROM Books
JOIN BorrowedBooks ON Books.book_id = BorrowedBooks.book_id
WHERE BorrowedBooks.return_date IS NULL;

SELECT Authors.name, COUNT(Books.book_id) AS book_count
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
