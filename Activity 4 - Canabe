-- INSERT DATA
-- _____________

-- Insert authors
INSERT INTO Authors (name, birth_year) VALUES
('J.K. Rowling', 1965),
('George Orwell', 1903),
('J.R.R. Tolkien', 1892),
('Agatha Christie', 1890),
('Stephen King', 1947);

-- Insert books
INSERT INTO Books (title, author_id, published_year, genre) VALUES
('Harry Potter and the Sorcerer''s Stone', 1, 1997, 'Fantasy'),
('1984', 2, 1949, 'Dystopian'),
('The Lord of the Rings', 3, 1954, 'Fantasy'),
('Murder on the Orient Express', 4, 1934, 'Mystery'),
('The Shining', 5, 1977, 'Horror');

-- Insert members
INSERT INTO Members (name, email, join_date) VALUES
('Alice Johnson', 'alice@gmail.com', '2023-01-15'),
('Bob Smith', 'bob@gmail.com', '2022-11-22'),
('Charlie Brown', 'charlie@gmail.com', '2023-06-10');

-- Insert borrowed books (some returned, some not)
INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES
(1, 1, '2024-02-01', NULL),  -- Alice borrowed Harry Potter, not returned yet
(2, 2, '2024-01-15', '2024-02-10'),  -- Bob borrowed 1984 and returned it
(3, 3, '2024-01-25', NULL);  -- Charlie borrowed LOTR, not returned yet

-- _________________
-- TASKS
-- _________________

-- 1. Find all books published after the year 2000
SELECT * FROM Books WHERE published_year > 2000;

-- 2. Get a list of members who have borrowed at least one book
SELECT DISTINCT Members.member_id, Members.name, Members.email
FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

-- 3. Retrieve all books along with their author's name
SELECT Books.title, Authors.name AS author_name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

-- 4. Find all books that have been borrowed but not yet returned
SELECT Books.title, Members.name AS borrowed_by, BorrowedBooks.borrow_date
FROM BorrowedBooks
JOIN Books ON BorrowedBooks.book_id = Books.book_id
JOIN Members ON BorrowedBooks.member_id = Members.member_id
WHERE BorrowedBooks.return_date IS NULL;

-- 5. Count how many books each author has written
SELECT Authors.name, COUNT(Books.book_id) AS book_count
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
