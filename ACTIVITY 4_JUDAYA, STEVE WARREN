CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(255),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE Members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE BorrowedBooks (
    borrow_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

INSERT INTO Authors (name, birth_year) VALUES
('Andres Mulach', 1965),
('George Martin', 1948),
('Stephen Rudwin', 1947),
('Marga Bautista', 1890),
('Leo Vergara', 1892);

INSERT INTO Books (title, author_id, published_year, genre) VALUES
('Ang Mutya ng Section E', 1, 1997, 'Romance'),
('HVIS University', 2, 1996, 'Horror'),
('When love meets pain', 3, 1977, 'Romance'),
('Cinderella', 4, 1934, 'Mystery'),
('Stephanie and the Handsome Prince', 5, 1937, 'Fantasy');

INSERT INTO Members (name, email, join_date) VALUES
('Maxine', 'maxine2.@example.com', '2020-01-15'),
('Andrei', 'andrei.doodle@example.com', '2019-05-22'),
('Steph', 'steph.mage@example.com', '2021-03-10');

INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES
(1, 1, '2023-01-01', NULL),
(2, 2, '2023-02-15', '2023-03-01'),
(3, 3, '2023-03-10', NULL);

SELECT * FROM Books WHERE published_year > 2000;

SELECT DISTINCT Members.name
FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

SELECT Books.title, Authors.name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title
FROM Books
JOIN BorrowedBooks ON Books.book_id = BorrowedBooks.book_id
WHERE BorrowedBooks.return_date IS NULL;

SELECT Authors.name, COUNT(Books.book_id) AS book_count
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
