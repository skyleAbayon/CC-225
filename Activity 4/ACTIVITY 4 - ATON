USE myfirstDB;

CREATE TABLE Authors (
  author_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  birth_year INTEGER
);

INSERT INTO Authors(name,birth_year)values
('Mahaw',1990),
('Noyy',2000),
('Mahaw',1990),
('MahawNoyy',1999),
('kIGWA',2003);
select*from Authors;


CREATE TABLE Books (
  book_id INTEGER AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  published_year INTEGER,
  genre VARCHAR(100),
  author_id INTEGER,
  FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);


INSERT INTO Books(title,published_year,genre,author_id)values
('Bata',2000,'Romance',1),
('Batuta',2001,'Drama',2),
('Tinda',1990,'Action',3),
('Muta',1999,'Romance',4),
('Skina',2003,'Comedy',5);
select*from Books;


CREATE TABLE Members (
  member_id INTEGER AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  join_date DATE
);

INSERT INTO Members(name,email,join_date)values
('Ahaha','ha@gmail.com','2010-12-06'),
('Ehehe','he@gmail.com','2009-12-06'),
('Uhuhu','hu@gmail.com','2012-12-06');
select*from Members;


CREATE TABLE BorrowedBooks (
  borrow_id INTEGER AUTO_INCREMENT PRIMARY KEY,
  book_id INTEGER,
  member_id INTEGER,
  borrow_date DATE,
  return_date DATE,  
  FOREIGN KEY (book_id) REFERENCES Books(book_id),
  FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

-- 1.)
SELECT * FROM Books WHERE published_year > 2000;

-- 2.)
SELECT DISTINCT m.member_id, m.name, m.email
FROM Members m
JOIN BorrowedBooks b ON m.member_id = b.member_id;

-- 3.)
SELECT b.book_id, b.title, b.published_year, b.genre, a.name AS author_name
FROM Books b
JOIN Authors a ON b.author_id = a.author_id;

-- 4.)
SELECT b.book_id, b.title, bb.borrow_date
FROM Books b
JOIN BorrowedBooks bb ON b.book_id = bb.book_id
WHERE bb.return_date IS NULL;

-- 5.)
SELECT a.author_id, a.name, COUNT(b.book_id) AS book_count
FROM Authors a
LEFT JOIN Books b ON a.author_id = b.author_id
GROUP BY a.author_id, a.name;
