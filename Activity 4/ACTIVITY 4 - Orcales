CREATE TABLE Authors (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Members (
    member_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE Books (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(100),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE BorrowedBooks (
    borrow_id INT PRIMARY KEY AUTO_INCREMENT,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

INSERT INTO Authors (name, birth_year) VALUES
('Casey Green', 1965),
('Riley Blue', 1978),
('Drew Silver', 1982),
('Jordan White', 1990),
('Skyler Black', 1970);

INSERT INTO Members (name, email, join_date) VALUES
('Rowan Field', 'rowan.field@example.com', '2024-06-10'),
('Sage Brook', 'sage.brook@example.com', '2024-07-22'),
('River Stone', 'river.stone@example.com', '2024-08-05');

INSERT INTO Books (title, author_id, published_year, genre) VALUES
('Echoes of the Past', 1, 2002, 'Historical Fiction'),
('Whispers in the Wind', 2, 2015, 'Fantasy'),
('The Silent City', 3, 2010, 'Mystery'),
('Beneath the Surface', 4, 2023, 'Thriller'),
('Stars Above Us', 5, 2008, 'Science Fiction');

INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES
(1, 1, '2025-01-15', '2025-02-01'),
(2, 2, '2025-01-20', NULL),
(3, 3, '2025-02-05', '2025-02-20'),
(4, 1, '2025-02-20', NULL),
(5, 2, '2025-03-05', '2025-03-15');

SELECT * FROM Books WHERE published_year > 2005;

SELECT DISTINCT Members.name FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

SELECT Books.title, Authors.name FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title FROM Books
JOIN BorrowedBooks ON Books.book_id = BorrowedBooks.book_id
WHERE BorrowedBooks.return_date IS NULL;

SELECT Authors.name, COUNT(Books.book_id) AS book_count FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
