CREATE TABLE Authors (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Members (
    member_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE Books (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(100),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE BorrowedBooks (
    borrow_id INT PRIMARY KEY AUTO_INCREMENT,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

INSERT INTO Authors (name, birth_year) VALUES
('Alice Johnson', 1975),
('Mark Thompson', 1980),
('Sophia Martinez', 1968),
('David Brown', 1990),
('Emma Wilson', 1985);

INSERT INTO Members (name, email, join_date) VALUES
('Kha Bao', 'kha.bao@example.com', '2023-01-15'),
('Aling Mimang', 'aling.mimang@example.com', '2023-02-10'),
('Lhee Hah', 'lhee.hah@example.com', '2023-03-05');

INSERT INTO Books (title, author_id, published_year, genre) VALUES
('The Lost World', 1, 2005, 'Adventure'),
('Mystery of the Night', 2, 2010, 'Mystery'),
('Science Explained', 3, 2018, 'Science'),
('The Hidden Truth', 4, 2021, 'Thriller'),
('History Revisited', 5, 1998, 'History');

INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES
(1, 1, '2024-01-01', '2024-01-10'),
(2, 2, '2024-02-01', NULL),
(3, 3, '2024-02-10', '2024-02-20'),
(4, 1, '2024-03-01', NULL),
(5, 2, '2024-03-05', '2024-03-15');

SELECT * FROM Books WHERE published_year > 2000;

SELECT DISTINCT Members.name FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;

SELECT Books.title, Authors.name FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.title FROM Books
JOIN BorrowedBooks ON Books.book_id = BorrowedBooks.book_id
WHERE BorrowedBooks.return_date IS NULL;

SELECT Authors.name, COUNT(Books.book_id) AS book_count FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
