-- create
CREATE TABLE AUTHORS (
  author_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(50) NOT NULL,
  birth_year INTEGER
);

CREATE TABLE MEMBERS (
  member_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  join_date DATE
);

CREATE TABLE BOOKS (
  book_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  title VARCHAR(100) NOT NULL,
  author_id INTEGER,
  published_year INTEGER,
  genre VARCHAR(100) NOT NULL,
  FOREIGN KEY (author_id) REFERENCES AUTHORS(author_id)
);

CREATE TABLE BORROWEDBOOKS (
  borrow_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  book_id INTEGER,
  member_id INTEGER,
  borrow_date DATE,
  return_date DATE NULL,
  FOREIGN KEY (book_id) REFERENCES BOOKS(book_id),
  FOREIGN KEY (member_id) REFERENCES MEMBERS(member_id)
);

-- insert
INSERT INTO AUTHORS VALUES (1, 'William Shakespeare', 1564);
INSERT INTO AUTHORS VALUES (2, 'Agatha Christie', 1890);
INSERT INTO AUTHORS VALUES (3, 'Barbara Cartland', 1901);
INSERT INTO AUTHORS VALUES (4, 'J.K. Rowling', 1965);
INSERT INTO AUTHORS VALUES (5, 'Harper Lee', 1926);

INSERT INTO BOOKS VALUES (1, 'Romeo and Juliet', 1, 1956, 'Tragedy');
INSERT INTO BOOKS VALUES (2, 'The Secret Adversary', 2, 1880, 'Mystery');
INSERT INTO BOOKS VALUES (3, 'The Love Pirate', 3, 1911, 'Romance');
INSERT INTO BOOKS VALUES (4, 'Harry Potter', 4, 2001, 'Fiction');
INSERT INTO BOOKS VALUES (5, 'To Kill A Mockingbird', 5, 2005, 'Historical');

INSERT INTO MEMBERS VALUES (1, 'Lebron James', 'lebron@gmail.com', '2024-07-05');
INSERT INTO MEMBERS VALUES (2, 'Zeus Amodeus', 'zuesmo1@gmail.com', '2024-08-09');
INSERT INTO MEMBERS VALUES (3, 'Valerie Odds', 'itsval@gmail.com', '2025-01-10');

-- fetch
SELECT title
FROM BOOKS 
WHERE published_year > 2000;

SELECT DISTINCT m.member_id, m.name, m.email
FROM MEMBERS m
JOIN BORROWEDBOOKS bb ON m.member_id = bb.member_id;

SELECT b.book_id, b.title, a.name AS author_name
FROM BOOKS b
JOIN AUTHORS a ON b.author_id = a.author_id;

SELECT bb.borrow_id, b.title, a.name AS author_name, m.name AS member_name, bb.borrow_date
FROM BORROWEDBOOKS bb
JOIN BOOKS b ON bb.book_id = b.book_id
JOIN AUTHORS a ON b.author_id = a.author_id
JOIN MEMBERS m ON bb.member_id = m.member_id
WHERE bb.return_date IS NULL;

SELECT a.author_id, a.name, COUNT(b.book_id) AS book_count
FROM AUTHORS a
JOIN BOOKS b ON a.author_id = b.author_id
GROUP BY a.author_id, a.name;
