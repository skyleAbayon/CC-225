CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(100),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE Members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE Borrowed_Books (
    borrow_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    member_id INT,
    borrow_date DATE,
    return_date DATE NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (member_id) REFERENCES Members(member_id)
);

INSERT INTO Authors (name, birth_year) VALUES 
('korok Asimov', 1920), 
('kabao Leehah', 1926), 
('Mark Twan', 1835), 
('Arthur Conan', 1859), 
('ken Wells', 1866);

INSERT INTO Books (title, author_id, published_year, genre) VALUES 
('space beyond', 1, 2008, 'Science Fiction'),
('To Kill a ghost', 2, 1960, 'Fiction'),
('Adventures of Finn', 3, 1885, 'Adventure'),
('mysterious case of dahmber', 4, 1887, 'Mystery'),
('The future of us', 5, 1895, 'Science Fiction');

INSERT INTO Members (name, email, join_date) VALUES 
('memang aleng', 'memang@gmail.com', '2023-02-10'),
('kenny lambigs', 'kenny@gmail.com', '2023-04-15'),
('kaye ranis', 'kaye@gmail.com', '2023-06-20');

INSERT INTO Borrowed_Books (book_id, member_id, borrow_date, return_date) VALUES 
(1, 1, '2024-02-01', NULL), 
(2, 2, '2024-02-05', '2024-02-15'), 
(3, 3, '2024-02-10', NULL);

SELECT * FROM Books WHERE published_year > 2000;

SELECT DISTINCT Members.member_id, Members.name, Members.email
FROM Members
JOIN Borrowed_Books ON Members.member_id = Borrowed_Books.member_id;

SELECT Books.book_id, Books.title, Books.published_year, Books.genre, Authors.name AS author_name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;

SELECT Books.book_id, Books.title, Members.name AS borrowed_by, Borrowed_Books.borrow_date
FROM Borrowed_Books
JOIN Books ON Borrowed_Books.book_id = Books.book_id
JOIN Members ON Borrowed_Books.member_id = Members.member_id
WHERE Borrowed_Books.return_date IS NULL;

SELECT Authors.name, COUNT(Books.book_id) AS book_count
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;

