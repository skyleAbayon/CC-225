CREATE TABLE Authors (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birth_year INT
);

CREATE TABLE Books (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    published_year INT,
    genre VARCHAR(100),
    FOREIGN KEY (author_id) REFERENCES Authors(author_id) ON DELETE CASCADE
);

CREATE TABLE Members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    join_date DATE
);

CREATE TABLE BorrowedBooks (
    borrow_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    member_id INT,
    borrow_date DATE NOT NULL,
    return_date DATE NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id) ON DELETE CASCADE,
    FOREIGN KEY (member_id) REFERENCES Members(member_id) ON DELETE CASCADE
);


INSERT INTO Authors (name, birth_year) VALUES 
('Brandon Sanderson', 1975),
('Neil Gaiman', 1960),
('Octavia Butler', 1947),
('Haruki Mukarami', 1949),
('Stephen King', 1947);


INSERT INTO Books (title, author_id, published_year, genre) VALUES 
('Mistborn: The Final Empire', 1, 2006, 'Fantasy'),
('American Gods', 2, 2001, 'Fantasy'),
('Kindred', 3, 1979, 'Science Fiction'),
('Murder on the Orient Express', 4, 1934, 'Mystery'),
('The Shining', 5, 1977, 'Horror');


INSERT INTO Members (name, email, join_date) VALUES 
('Jake Clifford Antiquina', 'antiquinajakeclifford@gmail.com', '2023-01-15'),
('Ciara Jade Antiquina', 'ciarajade@gmail.com', '2022-11-22'),
('Jeff Antiquina', 'jeffantiquina@gmail.com', '2023-06-10');


INSERT INTO BorrowedBooks (book_id, member_id, borrow_date, return_date) VALUES 
(1, 1, '2024-02-01', NULL), 
(2, 2, '2024-01-15', '2024-02-10'),  
(3, 3, '2024-01-25', NULL);



SELECT * FROM Books WHERE published_year > 2000;


SELECT DISTINCT Members.member_id, Members.name, Members.email
FROM Members
JOIN BorrowedBooks ON Members.member_id = BorrowedBooks.member_id;


SELECT Books.title, Authors.name AS author_name
FROM Books
JOIN Authors ON Books.author_id = Authors.author_id;


SELECT Books.title, Members.name AS borrowed_by, BorrowedBooks.borrow_date
FROM BorrowedBooks
JOIN Books ON BorrowedBooks.book_id = Books.book_id
JOIN Members ON BorrowedBooks.member_id = Members.member_id
WHERE BorrowedBooks.return_date IS NULL;


SELECT Authors.name, COUNT(Books.book_id) AS book_count
FROM Authors
LEFT JOIN Books ON Authors.author_id = Books.author_id
GROUP BY Authors.name;
